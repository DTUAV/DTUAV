/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace geometry_msgs
{
    public sealed class PointStamp : LCM.LCM.LCMEncodable
    {
        public double timestamp;
        public double x;
        public double y;
        public double z;
 
        public PointStamp()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xd08d38329c47fdf8L;
 
        static PointStamp()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("geometry_msgs.PointStamp"))
                return 0L;
 
            classes.Add("geometry_msgs.PointStamp");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.timestamp); 
 
            outs.Write(this.x); 
 
            outs.Write(this.y); 
 
            outs.Write(this.z); 
 
        }
 
        public PointStamp(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public PointStamp(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static geometry_msgs.PointStamp _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            geometry_msgs.PointStamp o = new geometry_msgs.PointStamp();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.timestamp = ins.ReadDouble();
 
            this.x = ins.ReadDouble();
 
            this.y = ins.ReadDouble();
 
            this.z = ins.ReadDouble();
 
        }
 
        public geometry_msgs.PointStamp Copy()
        {
            geometry_msgs.PointStamp outobj = new geometry_msgs.PointStamp();
            outobj.timestamp = this.timestamp;
 
            outobj.x = this.x;
 
            outobj.y = this.y;
 
            outobj.z = this.z;
 
            return outobj;
        }
    }
}

