/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace lcm_iot_msgs
{
    public sealed class LcmIotMessage : LCM.LCM.LCMEncodable
    {
        public double TimeStamp;
        public int TargetID;
        public int SourceID;
        public int MessageID;
        public String MessageData;
 
        public LcmIotMessage()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xcccc6a23ff48962eL;
 
        static LcmIotMessage()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("lcm_iot_msgs.LcmIotMessage"))
                return 0L;
 
            classes.Add("lcm_iot_msgs.LcmIotMessage");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            byte[] __strbuf = null;
            outs.Write(this.TimeStamp); 
 
            outs.Write(this.TargetID); 
 
            outs.Write(this.SourceID); 
 
            outs.Write(this.MessageID); 
 
            __strbuf = System.Text.Encoding.GetEncoding("US-ASCII").GetBytes(this.MessageData); outs.Write(__strbuf.Length+1); outs.Write(__strbuf, 0, __strbuf.Length); outs.Write((byte) 0); 
 
        }
 
        public LcmIotMessage(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public LcmIotMessage(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static lcm_iot_msgs.LcmIotMessage _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            lcm_iot_msgs.LcmIotMessage o = new lcm_iot_msgs.LcmIotMessage();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            byte[] __strbuf = null;
            this.TimeStamp = ins.ReadDouble();
 
            this.TargetID = ins.ReadInt32();
 
            this.SourceID = ins.ReadInt32();
 
            this.MessageID = ins.ReadInt32();
 
            __strbuf = new byte[ins.ReadInt32()-1]; ins.ReadFully(__strbuf); ins.ReadByte(); this.MessageData = System.Text.Encoding.GetEncoding("US-ASCII").GetString(__strbuf);
 
        }
 
        public lcm_iot_msgs.LcmIotMessage Copy()
        {
            lcm_iot_msgs.LcmIotMessage outobj = new lcm_iot_msgs.LcmIotMessage();
            outobj.TimeStamp = this.TimeStamp;
 
            outobj.TargetID = this.TargetID;
 
            outobj.SourceID = this.SourceID;
 
            outobj.MessageID = this.MessageID;
 
            outobj.MessageData = this.MessageData;
 
            return outobj;
        }
    }
}

